@model IEnumerable<EditRoleViewModel>

@using Microsoft.AspNetCore.Authorization;

@inject IAuthorizationService authorizationService;

@{
    ViewBag.Title = "All Roles";
}

<h1>All Roles</h1>

@if (Model.Any())
{
    @if ((await authorizationService.AuthorizeAsync(User, "CreateRolePolicy")).Succeeded)
    {
        <a class="btn btn-primary mb-3" asp-controller="administration" asp-action="createrole">Add new Role</a>
    }

    foreach (var role in Model)
    {
        <div class="card mb-3">
            <div class="card-header">
                <h3>Role Name : @role.RoleName</h3>
            </div>
            <div class="card-body">
                <div class="container">
                    <div class="row">
                        @if (role.Claims.Any())
                        {
                            string claimValue = string.Empty;

                            foreach (var claim in role.Claims)
                            {
                                if (claimValue != claim.Value)
                                {
                                    <div class="w-100"></div>
                                    <h3 class="card-title text-info">@claim.Value</h3>
                                    <div class="w-100"></div>
                                    <div class="col-4"><h5 class="card-title">@claim.Type</h5></div>
                                    claimValue = claim.Value;
                                }
                                else
                                {
                                    <div class="col-4"><h5 class="card-title">@claim.Type</h5></div>
                                }
                            }
                        }
                        else
                        {
                            <h5 class="card-title">None at the moment</h5>
                        }
                    </div>
                </div>
            </div>
            <div class="card-footer">
                <form method="post" asp-controller="administration" asp-action="DeleteRole" asp-route-id="@role.Id">

                    @if ((await authorizationService.AuthorizeAsync(User, "EditRolePolicy")).Succeeded)
                    {
                        <a class="btn btn-primary" asp-controller="administration"
                           asp-action="EditRole" asp-route-id="@role.Id">Edit</a>
                    }

                    @if ((await authorizationService.AuthorizeAsync(User, "DeleteRolePolicy")).Succeeded)
                    {
                        <span id="deleteSpan_@role.Id">
                            <a class="btn btn-danger"
                               onclick="confirmDelete('@role.Id',true)">Delete</a>
                        </span>

                        <span id="confirmDeleteSpan_@role.Id" style="display:none">
                            <span>Are you sure you want to delete?</span>
                            <button class="btn btn-danger" type="submit">Yes</button>
                            <a class="btn btn-primary"
                               onclick="confirmDelete('@role.Id',false)">No</a>
                        </span>
                    }

                </form>
            </div>
        </div>
    }
}

else
{
    <div class="card">
        <div class="card-header">
            No roles created yet
        </div>
        <div class="card-body">
            <h5 class="card-title">
                Use the button below to create a role
            </h5>
            <a class="btn btn-primary" asp-controller="administration" asp-action="createrole">Create Role</a>
        </div>
    </div>
}

@section Scripts{
    <script src="~/js/CustomScript.js"></script>
}